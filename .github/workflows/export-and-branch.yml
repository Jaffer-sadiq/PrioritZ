name: export-and-branch
on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to work on from Power Platform'
        required: true
        default: Prioritz
      solution_exported_folder:
        description: 'Folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'Staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder:
        description: 'Folder name to be created and checked in *do not change*'
        required: true
        default: solutions/
jobs:
  export-from-dev:
    # Use a self-hosted runner for better network control
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true

    # Add a pre-downloaded version of the actions repository
    - name: Setup Power Platform Actions (Cached)
      run: |
        if [ ! -d "./actions/microsoft/powerplatform-actions" ]; then
          echo "Cloning Power Platform Actions repository..."
          git clone --branch v0.4.0 https://github.com/microsoft/powerplatform-actions.git ./actions/microsoft/powerplatform-actions
        else
          echo "Using cached Power Platform Actions repository."
        fi

    - name: Export unmanaged solution
      run: ./actions/microsoft/powerplatform-actions/export-solution.sh \
        --environment-url ${{ secrets.PowerPlatformDevUrl }} \
        --app-id ${{ secrets.PowerPlatformAppID }} \
        --client-secret ${{ secrets.PowerPlatformClientSecret }} \
        --tenant-id ${{ secrets.PowerPlatformTenantID }} \
        --solution-name ${{ github.event.inputs.solution_name }} \
        --solution-output-file ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}.zip

    - name: Export managed solution
      run: ./actions/microsoft/powerplatform-actions/export-solution.sh \
        --environment-url ${{ secrets.PowerPlatformDevUrl }} \
        --app-id ${{ secrets.PowerPlatformAppID }} \
        --client-secret ${{ secrets.PowerPlatformClientSecret }} \
        --tenant-id ${{ secrets.PowerPlatformTenantID }} \
        --solution-name ${{ github.event.inputs.solution_name }} \
        --solution-output-file ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_managed.zip \
        --managed true

    - name: Unpack solution
      run: ./actions/microsoft/powerplatform-actions/unpack-solution.sh \
        --solution-file ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}.zip \
        --solution-folder ${{ github.event.inputs.solution_folder }}${{ github.event.inputs.solution_name }} \
        --solution-type 'Both'

    - name: Prepare solution for PR
      run: ./actions/microsoft/powerplatform-actions/branch-solution.sh \
        --solution-folder ${{ github.event.inputs.solution_folder }}${{ github.event.inputs.solution_name }} \
        --solution-target-folder ${{ github.event.inputs.solution_target_folder }}${{ github.event.inputs.solution_name }} \
        --repo-token ${{ secrets.GITHUB_TOKEN }} \
        --allow-empty-commit true
